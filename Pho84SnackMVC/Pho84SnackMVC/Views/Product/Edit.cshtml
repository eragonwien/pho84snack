@model Pho84SnackMVC.Models.Product
@{
   var availableSizes = await productRepository.Sizes();
}
<form class="section" asp-action="edit" asp-route-id="@Model.Id">
   @Html.HiddenFor(m => m.Id)
   <div class="field is-horizontal">
      <div class="field-label is-normal">
         <label class="label" asp-for="Name"></label>
      </div>
      <div class="field-body">
         <div class="field">
            <div class="control">
               <input class="input" type="text" asp-for="Name">
            </div>
            <p class="help is-danger"><span asp-validation-for="Name"></span></p>
         </div>

      </div>
   </div>

   <div class="field is-horizontal">
      <div class="field-label is-normal">
         <label class="label" asp-for="Description"></label>
      </div>
      <div class="field-body">
         <div class="field">
            <div class="control">
               <textarea class="textarea" rows="5" asp-for="Description"></textarea>
            </div>
            <p class="help is-danger"><span asp-validation-for="Description"></span></p>
         </div>
      </div>
   </div>

   <div class="field is-horizontal">
      <div class="field-label is-normal">
         <label class="label" asp-for="PriceList"></label>
      </div>
      <div class="field-body">
         <div class="panel is-fullwidth">
            @for (int i = 0; i < availableSizes.Count; i++)
            {
               var size = availableSizes[i];
               bool isChecked = Model.PriceList.Any(p => p.ProductSizeId == size.Id);
               string isCheckedStr = isChecked ? "checked" : "";
               var selectedSize = Model.PriceList.SingleOrDefault(p => p.ProductSizeId == size.Id);
               string sizePrice = isChecked && selectedSize != null ? selectedSize.Price.ToString() : string.Empty;

               <div class="panel-block">
                  <div class="field has-addons is-fullwidth">
                     <p class="control">
                        <label class="button checkbox checkbox-button @isCheckedStr">
                           <input type="checkbox" class="checkbox checkbox-all is-hidden" name="@(string.Format("PriceList[{0}].Id", i))" value="@size.Id" onchange="onCheckboxChanged(this)" @isCheckedStr />
                           <input type="checkbox" class="is-hidden" name="@(string.Format("PriceList[{0}].ShortName", i))" value="@size.ShortName" @isCheckedStr />
                           <input type="checkbox" class="is-hidden" name="@(string.Format("PriceList[{0}].LongName", i))" value="@size.LongName" @isCheckedStr />
                           <input type="checkbox" class="is-hidden" name="@(string.Format("PriceList[{0}].ProductId", i))" value="@selectedSize?.ProductId" @isCheckedStr />
                           <input type="checkbox" class="is-hidden" name="@(string.Format("PriceList[{0}].ProductSizeId", i))" value="@selectedSize?.ProductSizeId" @isCheckedStr />
                           <span class="has-text-weight-bold">@size.ShortName</span>
                        </label>
                     </p>
                     <p class="control is-expanded">
                        <input class="input" type="text" placeholder="Amount of money">
                     </p>
                  </div>
               </div>
            }
         </div>
      </div>
   </div>

   <div class="field is-horizontal">
      <div class="field-label">
         <!-- Left empty for spacing -->
      </div>
      <div class="field-body">
         <div class="field">
            <div class="control">
               <div class="buttons">
                  <button type="submit" class="button is-primary">
                     <span class="icon is-small"><span class="oi" data-glyph="check"></span></span>
                     <span>Save</span>
                  </button>
                  <a class="button is-light" asp-action="details" asp-route-id="@Model.Id">Cancel</a>
               </div>
            </div>
         </div>
      </div>
   </div>
</form>
